<?xml version="1.0" encoding="UTF-8"?><script xmlns:hds="http://netkernel.org/hds"><id>287CB3EAD99CA3A6</id><name>Graph Daylight and light switch</name><script>import org.netkernel.mod.hds.*;&#13;
import org.netkernel.layer0.nkf.*;&#13;
import java.text.*;&#13;
&#13;
m=HDSFactory.newDocument();&#13;
m.pushNode("query");&#13;
m.addNode("start",-1000L*60*60*24);&#13;
m.addNode("merge",6);&#13;
m.addNode("json",true);&#13;
m.pushNode("sensors");&#13;
m.pushNode("sensor").addNode("id","urn:daylight").addNode("mergeAction","average").popNode();&#13;
m.pushNode("sensor").addNode("id","urn:switch:test").addNode("mergeAction","sample").popNode();&#13;
&#13;
req=context.createRequest("active:polestarHistoricalQuery");&#13;
req.addArgumentByValue("operator",m.toDocument(false));&#13;
rep=context.issueRequest(req)&#13;
&#13;
kwhFactor=300000/36000000.0;&#13;
str="""&lt;html&gt;&lt;body style=""&gt;&lt;div&gt;&#13;
&lt;script type="text/javascript" src="/polestar/pub/protovis-d3.2.js"&gt;&lt;/script&gt;&#13;
&lt;script type="text/javascript" src="/polestar/scripts/execute/72AF9CDCB9EF6826"&gt;&lt;/script&gt;&#13;
&#13;
&lt;script type="text/javascript"&gt;&lt;!--&#13;
&#13;
gd = $rep;&#13;
kwhFactor= $kwhFactor;&#13;
len=gd.length;&#13;
&#13;
var w = 260,&#13;
    h = 100,&#13;
    x = pv.Scale.linear(0, len).range(0, w),&#13;
    y = pv.Scale.linear(0, 1).range(0, h);&#13;
&#13;
var vis = new pv.Panel()&#13;
    .width(w)&#13;
    .height(h)&#13;
    .margin(5)&#13;
    .right(40)&#13;
	.top(20)&#13;
    .bottom(30)&#13;
    .strokeStyle("#ccc");&#13;
&#13;
&#13;
time = extractArray(gd,1,"");&#13;
vis.add(pv.Rule)&#13;
    .data(x.ticks())&#13;
    .strokeStyle("#ddd")&#13;
    .left(x)&#13;
  .anchor("bottom").add(pv.Label).textAngle(Math.PI / 6)&#13;
	.textStyle("#CCC")&#13;
    .text(function(d) { return time[d]; });&#13;
&#13;
&#13;
//light&#13;
drawArea2(2,"rgba(255,196,0,0.5)", "rgba(255,196,0,1.0)", function(d) { return y(d) }, function(d) { return y(0); }, gd,vis);&#13;
&#13;
//switch&#13;
drawBoolean(3, "rgba(0,64,0,0.8)", 0.5, 0.2, gd, vis);&#13;
&#13;
&#13;
vis.add(pv.Label)&#13;
	.font("bold 12px sans-serif")&#13;
    .left(0)&#13;
    .bottom(h+2)&#13;
    .text("Daylight and lightswitch 24h")&#13;
    .textStyle("#000"); &#13;
&#13;
//legend&#13;
vis.add(pv.Dot)&#13;
    .left(2).bottom(-22)&#13;
	.shape("square").fillStyle("rgba(255,196,0,0.5)").strokeStyle("255,196,0,1.0").radius(4)&#13;
    .anchor("right").add(pv.Label)&#13;
    .text("daylight").textStyle("#CCC"); &#13;
&#13;
vis.add(pv.Dot)&#13;
    .left(60).bottom(-22)&#13;
	.shape("square").fillStyle("rgba(0,64,0,0.8)").strokeStyle("").radius(4)&#13;
    .anchor("right").add(pv.Label)&#13;
    .text("switch").textStyle("#CCC"); &#13;
&#13;
&#13;
&#13;
vis.render();&#13;
--&gt;&#13;
&lt;/script&gt;&#13;
&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;""".toString();&#13;
&#13;
&#13;
resp=context.createResponseFrom(str);&#13;
resp.setExpiry(INKFResponse.EXPIRY_MIN_CONSTANT_DEPENDENT,System.currentTimeMillis()+10*60*1000);&#13;
&#13;
//resp.setHeader("monitor_public",true);&#13;
resp.setMimeType("text/html");&#13;
&#13;
//resp=context.createResponseFrom(rep);&#13;
//resp.setExpiry(INKFResponse.EXPIRY_ALWAYS);&#13;
//resp.setMimeType("text/plain");</script><state>&lt;state/&gt;</state><triggers hds:type="STRING"/><keywords>visualization</keywords><public>private</public></script>