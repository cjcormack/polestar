<module version="2.0">
	<meta>
		<identity>
			<uri>urn:io:polestar</uri>
			<version>0.1.0</version>
		</identity>
		<info>
			<name>Polestar IoT Hub</name>
			<description></description>
		</info>
	</meta>
	<system>
		<dynamic/>
	</system>
	<rootspace name="Polestar / Public ">
		<literal uri="res:/etc/system/SimpleDynamicImportHook.xml" type="xml">
			<connection>
				<type>PolestarWeb</type>
				<type>HTTPFulcrum</type>
			</connection>
		</literal>
		<branch-merge>
			<config>res:/io/polestar/view/config/BranchMerge.xml</config>
			<space>
				<mapper>
					<config>res:/io/polestar/view/config/Mappings.xml</config>
					<space>
						<fileset>
							<id>polestar:statics</id>
							<regex>res:/io/polestar/view/.*</regex>
						</fileset>
						<import>
							<uri>urn:io:polestar:data</uri>
						</import>
						<import>
							<uri>urn:org:netkernel:ext:layer1</uri>
						</import>						
						<import>
							<uri>urn:org:netkernel:mod:hds</uri>
						</import>						
						<import>
							<uri>urn:org:netkernel:xml:core</uri>
						</import>						
						<import>
							<uri>urn:org:netkernel:lang:groovy</uri>
						</import>						
					</space>
				</mapper>
				<import>
					<uri>urn:org:netkernel:lang:xrl</uri>
					<private/>
				</import>
				<import>
					<uri>urn:org:netkernel:tpt:http</uri>
					<private/>
				</import>
				<import>
					<uri>urn:org:netkernel:ext:layer1</uri>
					<private/>
				</import>						
			</space>
		</branch-merge>
		<import>
			<uri>urn:org:netkernel:ext:layer1</uri>
			<private/>
		</import>
	</rootspace>

	<rootspace name="Polestar / Data " uri="urn:io:polestar:data" public="false">
	
		<!-- script stuff -->
		<endpoint>
			<id>polestar:data:scriptData</id>
			<grammar>res:/md/script/
				<optional>
					<group name="id"><regex type="alphanum"/></group>
					<optional>#<group name="fragment"><regex type="nmtoken"/></group></optional>
				</optional>
			</grammar>
			<class>io.polestar.data.scripts.ScriptDataAccessor</class>
		</endpoint>
		<endpoint>
			<id>polestar:data:scriptExecute</id>
			<grammar>res:/md/execute/
				<choice>
					<group name="id"><regex type="alphanum"/></group>
					<group>named/<group name="named"><regex type="anything"/></group></group>
				</choice>
			</grammar>
			<class>io.polestar.data.scripts.ExecuteScriptAccessor</class>
		</endpoint>
        <endpoint>
            <id>polestar:data:scriptExecuteActive</id>
            <grammar><active>
                <identifier>active:polestarExecuteScript</identifier>
                <argument min="0" name="script"/>
                <argument min="0" name="name"/>
                <varargs/>
            </active></grammar>
            <class>io.polestar.data.scripts.ExecuteScriptAccessor</class>
        </endpoint>
        
        <endpoint>
            <id>polestar:data:listScripts</id>
            <grammar>
                <active>
                    <identifier>active:polestarListScripts</identifier>
                </active>
            </grammar>
            <class>io.polestar.data.scripts.ListScriptsAccessor</class>
        </endpoint>
		
		<!-- sensor stuff -->
		<endpoint>
			<id>polestar:data:sensor</id>
			<grammar><active>
				<identifier>active:polestarSensorConfig</identifier>
				<identifier>active:polestarSensorState</identifier>
				<identifier>active:polestarSensorChanges</identifier>
				<identifier>active:polestarSensorUpdate</identifier>
				<identifier>active:polestarSensorReadingCheck</identifier>
				<argument name="state" min="0"/>
			</active></grammar>
			<class>io.polestar.data.sensors.SensorListAccessor</class>
		</endpoint>
        
        <endpoint>
            <id>polestar:data:scriptTriggers</id>
            <grammar>
                <active>
                    <identifier>active:polestarScriptTriggers</identifier>
                </active>
            </grammar>
            <class>io.polestar.data.scripts.ScriptTriggersAccessor</class>
        </endpoint>
        
        <!-- authentication stuff -->
        <endpoint>
            <id>polestar:data:authenticationData</id>
            <grammar>res:/md/authentication
            </grammar>
            <class>io.polestar.data.login.AuthenticationDataAccessor</class>
        </endpoint>
		
		<mapper>
			<config>res:/io/polestar/data/config/Mappings.xml</config>
			<space>
				<fileset>
					<id>polestar:datastatics</id>
					<regex>res:/io/polestar/data/.*</regex>
				</fileset>
			</space>
		</mapper>
		<import>
			<uri>urn:org:netkernel:ext:layer1</uri>
		</import>						
		<import>
			<uri>urn:org:netkernel:mod:hds</uri>
		</import>						
		<import>
			<uri>urn:org:netkernel:lang:groovy</uri>
		</import>						
		<import>
			<uri>urn:org:netkernel:client:http</uri>
		</import>		
        <import>
            <uri>urn:org:netkernel:mod:security</uri>
        </import>
        <import>
            <uri>urn:org:netkernel:email:core</uri>
        </import>
        <import>
			<uri>urn:org:netkernel:web:core</uri>
		</import>
		<import>
			<uri>urn:org:netkernel:xml:core</uri>
		</import>		

		<endpoint>
			<prototype>SimpleImportDiscovery</prototype>
			<grammar>active:SimpleImportDiscovery</grammar>
			<type>Polestar</type>
		</endpoint>
		<endpoint>
			<prototype>DynamicImport</prototype>
			<config>active:SimpleImportDiscovery</config>
		</endpoint>							
	</rootspace>
	
	<rootspace name="Polestar / Cron">
		<fileset>
			<regex>res:/etc/system/CronConfig.xml</regex>
			<rewrite>res:/io/polestar/data/config/CronConfig.xml</rewrite>
		</fileset>
		<endpoint>
			<id>polestar:data:quickPoll</id>
			<grammar>active:polestarQuickPoll</grammar>
			<class>io.polestar.data.poll.QuickPollAccessor</class>
		</endpoint>
        <endpoint>
            <id>polestar:data:mediumPoll</id>
            <grammar>active:polestarMediumPoll</grammar>
            <class>io.polestar.data.poll.MediumPollAccessor</class>
        </endpoint>
		<endpoint>
			<id>polestar:data:slowPoll</id>
			<grammar>active:polestarSlowPoll</grammar>
			<class>io.polestar.data.poll.SlowPollAccessor</class>
		</endpoint>
		<import>
			<uri>urn:io:polestar:data</uri>
			<private/>
		</import>
	</rootspace>
		
		
</module>